{"$message_type":"diagnostic","message":"unused imports: `existing_dir_ok::existing_dir_ok`, `existing_file_ok::existing_file_ok`, `new_dir_ok::new_dir_ok`, `new_file_ok::new_file_ok`, `rejects_dir::assert_fn_rejects_dir_path`, `rejects_exisitng_file::assert_fn_rejects_existing_file`, `rejects_existing_dir::assert_fn_rejects_existing_dir`, `rejects_file::assert_fn_rejects_file_path`, and `rejects_missing_path::assert_fn_rejects_missing_path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":205,"byte_end":237,"line_start":12,"line_end":12,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    existing_dir_ok::existing_dir_ok, existing_file_ok::existing_file_ok, new_dir_ok::new_dir_ok,","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":239,"byte_end":273,"line_start":12,"line_end":12,"column_start":39,"column_end":73,"is_primary":true,"text":[{"text":"    existing_dir_ok::existing_dir_ok, existing_file_ok::existing_file_ok, new_dir_ok::new_dir_ok,","highlight_start":39,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":275,"byte_end":297,"line_start":12,"line_end":12,"column_start":75,"column_end":97,"is_primary":true,"text":[{"text":"    existing_dir_ok::existing_dir_ok, existing_file_ok::existing_file_ok, new_dir_ok::new_dir_ok,","highlight_start":75,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":303,"byte_end":327,"line_start":13,"line_end":13,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    new_file_ok::new_file_ok, rejects_dir::assert_fn_rejects_dir_path,","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":329,"byte_end":368,"line_start":13,"line_end":13,"column_start":31,"column_end":70,"is_primary":true,"text":[{"text":"    new_file_ok::new_file_ok, rejects_dir::assert_fn_rejects_dir_path,","highlight_start":31,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":374,"byte_end":428,"line_start":14,"line_end":14,"column_start":5,"column_end":59,"is_primary":true,"text":[{"text":"    rejects_exisitng_file::assert_fn_rejects_existing_file,","highlight_start":5,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":434,"byte_end":486,"line_start":15,"line_end":15,"column_start":5,"column_end":57,"is_primary":true,"text":[{"text":"    rejects_existing_dir::assert_fn_rejects_existing_dir,","highlight_start":5,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":492,"byte_end":533,"line_start":16,"line_end":16,"column_start":5,"column_end":46,"is_primary":true,"text":[{"text":"    rejects_file::assert_fn_rejects_file_path,","highlight_start":5,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":539,"byte_end":591,"line_start":17,"line_end":17,"column_start":5,"column_end":57,"is_primary":true,"text":[{"text":"    rejects_missing_path::assert_fn_rejects_missing_path,","highlight_start":5,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"fs_ext/src/test_utils/mod.rs","byte_start":0,"byte_end":12,"line_start":1,"line_end":1,"column_start":1,"column_end":13,"is_primary":true,"text":[{"text":"mod asserts;","highlight_start":1,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"fs_ext/src/test_utils/asserts/mod.rs","byte_start":191,"byte_end":596,"line_start":11,"line_end":18,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub use {","highlight_start":1,"highlight_end":10},{"text":"    existing_dir_ok::existing_dir_ok, existing_file_ok::existing_file_ok, new_dir_ok::new_dir_ok,","highlight_start":1,"highlight_end":98},{"text":"    new_file_ok::new_file_ok, rejects_dir::assert_fn_rejects_dir_path,","highlight_start":1,"highlight_end":71},{"text":"    rejects_exisitng_file::assert_fn_rejects_existing_file,","highlight_start":1,"highlight_end":60},{"text":"    rejects_existing_dir::assert_fn_rejects_existing_dir,","highlight_start":1,"highlight_end":58},{"text":"    rejects_file::assert_fn_rejects_file_path,","highlight_start":1,"highlight_end":47},{"text":"    rejects_missing_path::assert_fn_rejects_missing_path,","highlight_start":1,"highlight_end":58},{"text":"};","highlight_start":1,"highlight_end":4}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `existing_dir_ok::existing_dir_ok`, `existing_file_ok::existing_file_ok`, `new_dir_ok::new_dir_ok`, `new_file_ok::new_file_ok`, `rejects_dir::assert_fn_rejects_dir_path`, `rejects_exisitng_file::assert_fn_rejects_existing_file`, `rejects_existing_dir::assert_fn_rejects_existing_dir`, `rejects_file::assert_fn_rejects_file_path`, and `rejects_missing_path::assert_fn_rejects_missing_path`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/mod.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    existing_dir_ok::existing_dir_ok, existing_file_ok::existing_file_ok, new_dir_ok::new_dir_ok,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    new_file_ok::new_file_ok, rejects_dir::assert_fn_rejects_dir_path,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    rejects_exisitng_file::assert_fn_rejects_existing_file,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    rejects_existing_dir::assert_fn_rejects_existing_dir,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    rejects_file::assert_fn_rejects_file_path,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    rejects_missing_path::assert_fn_rejects_missing_path,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/mod.rs:1:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod asserts;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `asserts::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/mod.rs","byte_start":22,"byte_end":32,"line_start":3,"line_end":3,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use asserts::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","code":null,"level":"help","spans":[{"file_name":"fs_ext/src/lib.rs","byte_start":41,"byte_end":67,"line_start":4,"line_end":4,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"pub(crate) mod test_utils;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"fs_ext/src/test_utils/mod.rs","byte_start":14,"byte_end":34,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"pub use asserts::*;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `asserts::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/mod.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use asserts::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/lib.rs:4:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) mod test_utils;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `existing_dir_ok` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/existing_dir_ok.rs","byte_start":39,"byte_end":54,"line_start":3,"line_end":3,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn existing_dir_ok<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `existing_dir_ok` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/existing_dir_ok.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn existing_dir_ok<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `existing_file_ok` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/existing_file_ok.rs","byte_start":39,"byte_end":55,"line_start":3,"line_end":3,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"pub fn existing_file_ok<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `existing_file_ok` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/existing_file_ok.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn existing_file_ok<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `new_dir_ok` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/new_dir_ok.rs","byte_start":35,"byte_end":45,"line_start":3,"line_end":3,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"pub fn new_dir_ok<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `new_dir_ok` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/new_dir_ok.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn new_dir_ok<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `new_file_ok` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/new_file_ok.rs","byte_start":35,"byte_end":46,"line_start":3,"line_end":3,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"pub fn new_file_ok<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `new_file_ok` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/new_file_ok.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn new_file_ok<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `assert_fn_rejects_dir_path` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/rejects_dir.rs","byte_start":39,"byte_end":65,"line_start":3,"line_end":3,"column_start":8,"column_end":34,"is_primary":true,"text":[{"text":"pub fn assert_fn_rejects_dir_path<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `assert_fn_rejects_dir_path` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/rejects_dir.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn assert_fn_rejects_dir_path<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `assert_fn_rejects_existing_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/rejects_exisitng_file.rs","byte_start":39,"byte_end":70,"line_start":3,"line_end":3,"column_start":8,"column_end":39,"is_primary":true,"text":[{"text":"pub fn assert_fn_rejects_existing_file<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `assert_fn_rejects_existing_file` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/rejects_exisitng_file.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn assert_fn_rejects_existing_file<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `assert_fn_rejects_existing_dir` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/rejects_existing_dir.rs","byte_start":39,"byte_end":69,"line_start":3,"line_end":3,"column_start":8,"column_end":38,"is_primary":true,"text":[{"text":"pub fn assert_fn_rejects_existing_dir<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `assert_fn_rejects_existing_dir` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/rejects_existing_dir.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn assert_fn_rejects_existing_dir<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `assert_fn_rejects_file_path` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/rejects_file.rs","byte_start":39,"byte_end":66,"line_start":3,"line_end":3,"column_start":8,"column_end":35,"is_primary":true,"text":[{"text":"pub fn assert_fn_rejects_file_path<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `assert_fn_rejects_file_path` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/rejects_file.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn assert_fn_rejects_file_path<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `assert_fn_rejects_missing_path` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"fs_ext/src/test_utils/asserts/rejects_missing_path.rs","byte_start":67,"byte_end":97,"line_start":6,"line_end":6,"column_start":8,"column_end":38,"is_primary":true,"text":[{"text":"pub fn assert_fn_rejects_missing_path<F, T>(f: F) -> io::Result<()>","highlight_start":8,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `assert_fn_rejects_missing_path` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mfs_ext/src/test_utils/asserts/rejects_missing_path.rs:6:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn assert_fn_rejects_missing_path<F, T>(f: F) -> io::Result<()>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"11 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 11 warnings emitted\u001b[0m\n\n"}
